    1 REM NOTE: Basic language type forced to be:
    2 REM       trs2 - TRS-80 Level II BASIC tokenized file
   10 CLS:PRINT@282,"FLIP  DISC"
   11 PRINT@409,"COPYRIGHT BY"
   12 PRINT@470,"CREATIVE COMPUTING"
   13 PRINT@536,"P.O. BOX 789-M"
   14 PRINT@593,"MORRISTOWN, NEW JERSEY 07960"
   15 FORI=1TO2000:NEXTI
   20 REM  REVISED FOR SOL BY DAVID FOX * MARIN COMPUTER CENTER
   25 REM  STRATEGIES AUGMENTED BY JOHN WALLACE
   30 REM  REVISED FOR TRS-80 LEVEL II BASIC BY DOUG BENEDICT
   40 REM  PLAYS THE GAME "FLIP DISC" WITH THREE STRATEGIES
   50 REM   1. TAKE THE MAXIMUM NUMBER OF PIECES
   60 REM   2. ADD A BONUS FOR OUTSIDE POSITION
   65 REM   3. ADD A VARIABLE BONUS FOR ANY POSITION
   70 REM  BOARD IS THE ARRAY A, BOUNDED BY 0'S (BLANKS)
   80 REM   A=0 FOR EMPTY SQUARE
   90 REM   A=B FOR BLACK SQUARE -- X (INTERNALLY -1)
  100 REM   A=W FOR WHITE SQUARE -- O (INTERNALLY +1)
  110 REM   I AND J ALWAYS USED FOR ROW/COLUMN INDICES
  120 REM   I4 AND J4 STORE INCREMENTS TO THE 8 NEIGHBORS
  130 REM   C$ AND D$ STORE CHARACTERS A-H,X,.,O FOR OUTPUT
  140 CLEAR:CLEAR 300
  150 DIM A(10,10),I4(9),J4(9),C$(8),D$(3),D(10,10)
  160 REM  INITIAL GREETINGS
  170 CLS
  190 PRINT @ 896,"Do you want instructions? (Y or N) ";
  200 X$=INKEY$:X$=X$:IF X$="" THEN 200 ELSE PRINT X$
  210 IF X$="N" THEN 390
  220 IF X$<>"Y" THEN 190
  230 CLS:PRINT CHR$(28);
  240 PRINT "FLIP DISC IS PLAYED ON A 64-SQUARE GAME BOARD WITH PIECES THAT"
  245 PRINT "HAVE 'X'S ON ONE SIDE AND 'O'S ON THE OTHER.":PRINT
  250 PRINT "THE OBJECT OF THE GAME IS TO END UP WITH MORE PIECES IN YOUR"
  255 PRINT "COLOR THAN I HAVE IN MY COLOR.":PRINT:PRINT "THE RULES ARE:":PRINT
  260 PRINT "1) FIRST, I WILL PLACE TWO 'X' PIECES AND TWO 'O' PIECES ON THE"
  265 PRINT "   BOARD.":PRINT:PRINT "2) A MOVE CONSISTS OF 'OUTFLANKING' YOUR OPPONENT'S PIECE(S),"
  270 PRINT "   THEN 'FLIPPING' THEM OVER TO YOUR COLOR.":PRINT @ 970,"";:GOSUB 3800:CLS
  275 PRINT:PRINT "TO OUTFLANK MEANS TO PLACE A PIECE SO THAT YOUR OPPONENT'S"
  280 PRINT "ROW(S) OF PIECES IS BORDERED AT EACH END BY ONE OF YOUR PIECES"
  290 PRINT:PRINT:PRINT "EXAMPLE:":PRINT @ 474,"X  O  O  o"
  295 PRINT @ 768,"";:GOSUB 3800:PRINT @ 486,"X":PRINT @ 599,"'X' OUTFLANKS 'O'S":PRINT @ 768,"";:GOSUB 3800
  300 PRINT @ 477,"X  X  X";:PRINT @ 596,"'O'S ARE FLIPPED TO 'X'S":PRINT @ 768,"";:GOSUB 3800:CLS
  305 PRINT:PRINT "3) IF A PLAYER CAN'T OUTFLANK AT LEAST ONE PIECE, THE TURN IS":PRINT "   FORFEITED.  TO FORFEIT YOUR TURN, ENTER A '0' WHEN I ASK FOR"
  310 PRINT "   YOUR NUMBER.":PRINT:PRINT "4) A PIECE MAY OUTFLANK IN ANY NUMBER OF DIRECTIONS AT THE SAME"
  315 PRINT "   TIME (HORIZONTALLY, VERTICALLY, DIAGONALLY).":PRINT
  320 PRINT "5) I WILL TELL YOU IF A MOVE ISN'T VALID."
  380 REM  INITIALIZE
  390 PRINT @ 960,"SHOULD I WAIT BEFORE DISPLAYING MY MOVES? (Y OR N) ";
  400 X$=INKEY$:X$=X$:IF X$="" THEN 400 ELSE PRINT X$;
  410 F2=0
  420 IF X$="N" THEN CLS:GOTO 480
  430 IF X$<>"Y" THEN 390
  440 F2=1
  450 CLS
  460 PRINT "OK.  PRESSING 'ENTER' WILL LET ME GO ON."
  470 PRINT
  480 PRINT "WHICH STRATEGY SHOULD I USE..."
  482 PRINT:PRINT,"PRETTY GOOD",": (1)"
  484 PRINT,"EVEN BETTER",": (2)"
  486 PRINT,"MY VERY BEST",": (3)"
  487 X$=INKEY$:X$=X$:IF X$="" THEN 487
  488 S2=VAL(X$):IF S2<1 OR S2>3 THEN 487
  490 S2=S2-1:PRINT:PRINT "  STRATEGY #";X$;" -   OK....I'M SETTING UP THE BOARD"
  530 PRINT
  540 B=-1
  550 W=+1
  560 D$(B+2)="X"
  570 D$(0+2)="."
  580 D$(W+2)="O"
  590 FOR K=1 TO 8
  600 READ I4(K)
  610 NEXT K
  620 DATA 0,-1,-1,-1,0,1,1,1
  630 FOR K=1 TO 8
  640 READ J4(K)
  650 NEXT K
  660 DATA 1,1,0,-1,-1,-1,0,1
  670 FOR K=1 TO 8
  680 READ C$(K)
  690 NEXT K
  700 DATA "A","B","C","D","E","F","G","H"
  710 REM  SET UP A NEW GAME
  720 FOR I=1 TO 10
  730 FOR J=1 TO 10
  740 A(I,J)=0
  750 NEXT J
  760 NEXT I
  770 A(5,5)=W
  780 A(6,6)=W
  790 A(5,6)=B
  800 A(6,5)=B
  810 C1=2
  820 H1=2
  830 N1=4
  835 GOSUB 3440
  840 Z=0
  845 D3=4
  850 REM  HUMAN'S CHOICES
  860 PRINT
  870 C=W
  880 H=B
  890 PRINT "DO YOU WANT TO HAVE X OR O? ";
  895 X$=INKEY$:X$=X$:IF X$="" THEN 895 ELSE PRINT X$
  900 IF X$="X" THEN X1$="X":X2$="O":GOTO 950
  910 IF X$<>"O" THEN PRINT CHR$(27);:GOTO 890
  920 X1$="O":X2$="X"
  930 C=B
  940 H=W
  950 PRINT:PRINT
  960 PRINT "DO YOU WANT TO GO FIRST? (Y OR N) ";
  965 X$=INKEY$:X$=X$:IF X$="" THEN 965 ELSE PRINT X$
  970 IF X$="N" THEN GOSUB 3190:GOTO 1060
  980 IF X$<>"Y" THEN PRINT CHR$(27);:GOTO 960
  990 REM  PRINT INITIAL BOARD
 1000 GOSUB 3190
 1010 GOTO 1760
 1020 REM  COMPUTER'S MOVE
 1060 PRINT @ 416,CHR$(30);:PRINT @ 425,"I'M THINKING!";
 1070 PRINT @ 475,CHR$(30);:PRINT @ 416,"";
 1080 B1=-1
 1090 I3=0:J3=0
 1100 T1=C
 1110 T2=H
 1120 REM  SCAN FOR BLANK SQUARE
 1130 FOR I=D3 TO 11-D3
 1140 FOR J=D3 TO 11-D3
 1150 IF A(I,J)<>0 THEN 1440
 1160 REM  FOUND A BLANK SQUARE
 1170 REM  DOES IT HAVE AN OPPONENT AS A NEIGHBOR?
 1180 GOSUB 2710
 1190 IF F1=0 THEN 1440
 1200 REM  FOUND AN OPPONENT AS A NEIGHBOR
 1210 REM  HOW MANY OF HIS PIECES CAN WE FLIP?
 1220 REM  (DON'T DO IT NOW)
 1230 U=-1
 1240 GOSUB 2910
 1250 REM  EXTRA POINTS FOR BOUNDRY POSITION
 1260 IF S1=0 THEN 1440
 1270 IF S2=2 THEN S1=S1+D(I,J):GOTO 1320
 1280 IF D(I,J)>6 THEN S1=S1+2*S2
 1310 REM  IS THIS BETTER THAN THE BEST FOUND SO FAR?
 1320 IF S1<B1 THEN 1440
 1330 IF S1>B1 THEN B2=1:GOTO 1400
 1340 REM  A TIE, RANDOM DECSION
 1370 R=RND(0)
 1380 IF R>1/B2 THEN 1440
 1390 REM  YES
 1400 B1=S1
 1405 D1=D(I,J)
 1410 I3=I
 1420 J3=J
 1430 REM  END OF SCAN LOOP
 1440 NEXT J
 1450 NEXT I
 1460 REM  COULD WE DO ANYTHING?
 1470 IF B1>0 THEN 1540
 1480 REM  NO
 1490 PRINT "I HAVE TO FORFEIT MY MOVE.";
 1500 IF Z=1 THEN 2280
 1510 Z=1
 1520 GOTO 1760
 1530 REM  MAKE MOVE
 1540 Z=0
 1550 PRINT "      I WILL MOVE TO ";
 1560 PRINT LLIST "#";I3-1;
 1570 PRINT C$(J3-1);
 1582 IF F2=0 THEN 1590
 1584 PRINT@ 480,"PRESS 'ENTER' FOR ME TO MOVE";
 1586 X$=INKEY$:X$=X$:IF X$="" THEN 1586
 1590 PRINT @ 480,"";
 1600 I=I3
 1610 J=J3
 1620 U=1
 1630 GOSUB 2910
 1640 C1=C1+S1+1
 1650 H1=H1-S1
 1660 N1=N1+1
 1670 PRINT "THAT GIVES ME";
 1680 PRINT S1;
 1690 PRINT "OF YOUR PIECES";
 1700 REM  PRINT OUT THE BOARD
 1710 GOSUB 3220
 1720 REM  TEST FOR END OF GAME
 1730 IF H1=0 THEN 2280
 1740 IF N1=64 THEN 2280
 1750 REM  HUMAN'S MOVE
 1760 T1=H
 1770 T2=C
 1780 PRINT @ 896,CHR$(30)
 1790 PRINT @ 768,CHR$(30)
 1800 PRINT @ 768,"YOUR MOVE -- NUMBER: ";
 1802 X$=INKEY$:X$=X$:IF X$="" THEN 1802
 1803 PRINTX$;:I=VAL(X$):IF I<0 OR I>8 THEN 1790
 1805 IF I=0 THEN 1830
 1810 PRINT "     LETTER: ";
 1820 X$=INKEY$:X$=X$:IF X$="" THEN 1820 ELSE PRINT X$;
 1830 PRINT @ 896,CHR$(30):PRINT @ 896,"";
 1840 IF I<>0 THEN 1900
 1850 PRINT "ARE YOU FORFEITING YOUR TURN? (Y OR N) ";
 1855 X$=INKEY$:X$=X$:IF X$="" THEN 1855 ELSE PRINT X$
 1860 IF X$<>"Y" THEN 1780
 1870 IF Z=1 THEN 2280
 1880 Z=1
 1890 GOTO 1060
 1900 I=I+1
 1905 IF I=2 OR I=9 THEN D2=1 ELSE D2=0
 1910 FOR JN=1 TO 8
 1915 J=JN
 1920 IF C$(J)=X$ THEN JN=9:GOTO 1960
 1930 NEXT JN
 1940 GOTO 1790
 1950 REM  CHECK IF BLANK
 1960 J=J+1
 1965 IF J=2 OR J=9 THEN D2=D2+1
 1970 IF A(I,J)=0 THEN 2010
 1980 PRINT "SORRY, THAT SPACE IS OCCUPIED - PLEASE TRY AGAIN"
 1990 GOTO 1790
 2000 REM  CHECK FOR LEGAL NEIGHBOR
 2010 GOSUB 2710
 2020 IF F1=1 THEN 2060
 2030 PRINT "SORRY, YOU ARE NOT NEXT TO ONE OF MY PIECES - TRY AGAIN"
 2040 GOTO 1790
 2050 REM  CHECK IF LEGAL RUN
 2060 U=-1
 2070 GOSUB 2910
 2080 IF S1>0 THEN 2120
 2090 PRINT "SORRY, YOU AREN'T SURROUNDING ANY OF MY PIECES - TRY AGAIN"
 2100 GOTO 1790
 2110 REM  EVERYTHING LEGAL, MAKE HUMAN'S MOVE
 2120 Z=0
 2122 IF D3=2 THEN 2130
 2124 IF D(I,J)<5 THEN D3=2:GOTO 2130
 2126 IF N1>10 THEN D3=3
 2130 PRINT "THAT GIVES YOU";
 2140 PRINT S1;
 2150 PRINT "OF MY PIECES"
 2160 U=1
 2170 GOSUB 2910
 2180 H1=H1+S1+1
 2190 C1=C1-S1
 2200 N1=N1+1
 2210 REM  PRINT OUT BOARD
 2220 GOSUB 3220
 2225 IF D1=9 OR D2=2 THEN GOSUB 3610
 2230 REM  TEST FOR END OF GAME
 2240 IF C1=0 THEN 2280
 2250 IF N1=64 THEN 2280
 2260 GOTO 1020
 2270 REM  END OF GAME WRAPUP
 2280 PRINT @ 640,"";
 2290 PRINT "YOU HAVE";
 2300 PRINT H1;
 2310 PRINT " PIECES AND I HAVE";
 2320 PRINT C1;
 2330 PRINT " PIECES; ";
 2340 IF H1=C1 THEN 2380
 2350 IF H1>C1 THEN 2400
 2360 PRINT "SORRY, I WON THAT ONE."
 2370 GOTO 2410
 2380 PRINT "A TIE!!"
 2390 GOTO 2600
 2400 PRINT "YOU WON!"
 2410 C1=C1-H1
 2420 PRINT @ 768,CHR$(30);
 2430 IF C1>0 THEN 2450
 2440 C1=-C1
 2450 C1=(64*C1)/N1
 2460 PRINT "THAT WAS A ";
 2470 IF C1<11 THEN 2590
 2480 IF C1<25 THEN 2570
 2490 IF C1<39 THEN 2550
 2500 IF C1<53 THEN 2530
 2510 PRINT "PERFECT GAME."
 2520 GOTO 2600
 2530 PRINT "WALKAWAY."
 2540 GOTO 2600
 2550 PRINT "FIGHT."
 2560 GOTO 2600
 2570 PRINT "HOT GAME !"
 2580 GOTO 2600
 2590 PRINT "SQUEAKER !!"
 2600 PRINT
 2610 PRINT "DO YOU WANT TO PLAY ANOTHER GAME? (Y OR N) ";
 2615 X$=INKEY$:X$=X$:IF X$="" THEN 2615 ELSE PRINT X$
 2620 IF X$="Y" THEN RESTORE:GOTO 140
 2630 IF X$<>"N" THEN 2610
 2640 CLS:PRINT"THANKS FOR PLAYING!"
 2650 RUN"MENU"
 2660 PRINT:PRINT"TO LOAD ANOTHER PROOGRAM, TYPE 'CLOAD'."
 2670 PRINT:PRINT:GOTO 3340
 2680 REM  SUROUTINE * TEST-FOR-PROPER-NEIGHBOR
 2690 REM  ASSUMES: I,J LOCATES A BLANK SQUARE
 2700 REM    YOU HOPE TO SEE AN ADLANECT T2 (=-T1)
 2710 FOR I1=-1 TO 1
 2720 FOR J1=-1 TO 1
 2730 IF A(I+I1,J+J1)=T2 THEN 2800
 2740 NEXT J1
 2750 NEXT I1
 2760 REM  NO T2 FOUND, FAILURE
 2770 F1=0
 2780 RETURN
 2790 REM  SUCCESS
 2800 F1=1
 2810 RETURN
 2820 REM  SUBROUTINE SCORE-AND-UPDATE
 2830 REM  ASSUMES:
 2840 REM    (I,J) IS A TENTATIVE PLACE FOR A PIECE T1.
 2850 REM    WANT RUNS OF T2=-T1, TERMINATED BY A T1.
 2860 REM    IF U IS TRUE (1), MARK THOSE RUNS AS T1'S.
 2870 REM    RETURN SUM OF ALL RUNS (T2'S ONLY) IN S1.
 2880 REM    MAIN PROGRAM CONTAINS THE FOLLOWING ARRAYS--
 2890 REM     I4-- 0 -1 -1 -1  0  1  1  1
 2900 REM     J4-- 1  1  0 -1 -1 -1  0  1
 2910 S1=0
 2920 FOR K=1 TO 8
 2930 I5=I4(K)
 2940 J5=J4(K)
 2950 I6=I+I5
 2960 J6=J+J5
 2970 S3=0
 2980 IF A(I6,J6)<>T2 THEN 3160
 2990 REM  LOOP THROUGH THE RUN
 3000 S3=S3+1
 3010 I6=I6+I5
 3020 J6=J6+J5
 3030 IF A(I6,J6)=T1 THEN 3060
 3040 IF A(I6,J6)=0 THEN 3160
 3050 GOTO 3000
 3060 S1=S1+S3
 3070 IF U<>1 THEN 3160
 3080 REM  UPDATE BOARD
 3090 I6=I
 3100 J6=J
 3110 FOR K1=0 TO S3
 3120 A(I6,J6)=T1
 3130 I6=I6+I5
 3140 J6=J6+J5
 3150 NEXT K1
 3160 NEXT K
 3170 RETURN
 3180 REM  SUBROUTINE PRINT-BOARD
 3190 CLS:PRINTCHR$(28);
 3200 PRINT "     A  B  C  D  E  F  G  H";TAB(42);"** SCORE **"
 3210 PRINT TAB(42);"==========="
 3220 PRINT @ 64,"";
 3230 FOR I=2 TO 9
 3240 PRINT I-1;
 3250 FOR J=2 TO 9
 3260 PRINT "  ";
 3270 PRINT D$(A(I,J)+2);
 3280 NEXT J
 3290 PRINT @ I*64,"";
 3300 NEXT I
 3310 PRINT @ 163,"YOU (";X1$;"):";H1;TAB(47);"TRS-80 (";X2$;"):";C1;
 3320 PRINT @ 233,"MOVES LEFT:";64-N1;
 3330 RETURN
 3340 END
 3440 REM INITIALIZE BONUS MATRIX
 3450 FOR I=1 TO 10
 3460 FOR J=1 TO 10
 3470 READ D(I,J)
 3480 NEXT J
 3490 NEXT I
 3500 RETURN
 3510 DATA 0,0,0,0,0,0,0,0,0,0
 3520 DATA 0,9,0,7,7,7,7,0,9,0
 3530 DATA 0,0,0,3,1,1,3,0,0,0
 3540 DATA 0,7,3,7,5,5,7,3,7,0
 3550 DATA 0,7,1,5,0,0,5,1,7,0
 3560 DATA 0,7,1,5,0,0,5,1,7,0
 3570 DATA 0,7,3,7,5,5,7,3,7,0
 3580 DATA 0,0,0,3,1,1,3,0,0,0
 3590 DATA 0,9,0,7,7,7,7,0,9,0
 3600 DATA 0,0,0,0,0,0,0,0,0,0
 3610 REM  A CORNER HAS BEEN WON
 3620 REM   MODIFY MATRIX
 3630 IF A(2,2)=0 THEN 3670
 3640 D(2,3)=7
 3650 D(3,2)=7
 3660 D(3,3)=7
 3670 IF A(2,9)=0 THEN 3710
 3680 D(2,8)=7
 3690 D(3,8)=7
 3700 D(3,9)=7
 3710 IF A(9,9)=0 THEN 3750
 3720 D(8,8)=7
 3730 D(8,9)=7
 3740 D(9,8)=7
 3750 IF A(9,2)=0 THEN 3790
 3760 D(8,2)=7
 3770 D(8,3)=7
 3780 D(9,3)=7
 3790 RETURN
 3800 PRINT "PRESS ANY KEY TO CONTINUE:";
 3810 X$=INKEY$:X$=X$:IF X$="" THEN 3810 ELSE RETURN
