# NOTE: Type forced to be:
# trs2 - TRS-80 Level II BASIC tokenized file
  940 IF The IBM Personal Computer Donkey
  950 IF Version 1.10 (C)Copyright IBM Corp 1981, 1982
  960 IF Licensed Material - Program Property of IBM
  975 TROFF SEG : DEFSTR 106,0
  980 SAMPLES$ CVS "NO"
  990 INPUT 1010
 1000 SAMPLES$ CVS "YES"
 1010 INKEY$ SQR : MEM 0,1 : LLIST 15,0,0 : OUT 40 : DELETE : THEN 5,19 : GOSUB "IBM"
 1020 THEN 7,12,0 : GOSUB "Personal Computer"
 1030 LLIST 10,0 : THEN 10,9,0 : GOSUB {0xFF} TRON (213) EOF < (21,205) EOF {0xFF} TRON (184)
 1040 THEN 11,9,0 : GOSUB {0xFF} TRON (179) EOF "       DONKEY        "EOF {0xFF} TRON (179)
 1050 THEN 12,9,0 : GOSUB {0xFF} TRON (179) EOF < (21,32) EOF {0xFF} TRON (179)
 1060 THEN 13,9,0 : GOSUB {0xFF} TRON (179) EOF "    Version 1.1O     "EOF {0xFF} TRON (179)
 1070 THEN 14,9,0 : GOSUB {0xFF} TRON (212) EOF < (21,205) EOF {0xFF} TRON (190)
 1080 LLIST 15,0 : THEN 17,4,0 : GOSUB "(C) Copyright IBM Corp 1981, 1982"
 1090 LLIST 14,0 : THEN 23,7,0 : GOSUB "Press space bar to continue"
 1100 READ RND CVD CVI ""+ INPUT 1100
 1110 CMD$ CVS RND 
 1120 READ CMD$ CVS ""+ INPUT 1110
 1130 READ CMD$ CVS {0xFF} TRON (27) + INPUT 1298
 1140 READ CMD$ CVS " "+ INPUT 1160
 1150 INPUT 1110
 1160 TROFF SEG CVS 0
 1170 READ ({0xFF} TROFF (&H410) MKD$ &H30) CVD CVI &H30 + TROFF SEG : INPUT 1291
 1180 OUT 80 : DELETE : THEN 3,1
 1190 GOSUB "HOLD IT!"
 1200 GOSUB "YOU'RE NOT USING THE COLOR/GRAPHICS MONITOR ADAPTER!"
 1210 GOSUB "THIS PROGRAM USES GRAPHICS AND REQUIRES THAT ADAPTER."
 1220 GOSUB "PRESS THE SPACE BAR TO CONTINUE."
 1230 TROFF SEG
 1240 READ RND CVD CVI ""+ INPUT 1240
 1250 CMD$ CVS RND 
 1260 READ CMD$ CVS ""+ INPUT 1250
 1270 READ CMD$ CVS {0xFF} TRON (27) + INPUT 1298
 1280 READ CMD$ CVS " "+ INPUT 1298
 1290 INPUT 1250
 1291 INKEY$ SQR 
 1292 ELSE LOAD INPUT 1295
 1293 {0xFE} REM "p16"
 1294 INPUT 1300
 1295 LLIST 31,0,0
 1296 GOSUB "THIS PROGRAM REQUIRES ADVANCED BASIC -- USE COMMAND 'BASICA'" : LLIST 15,0,0 : RESET I CVS 1 STEP 9000 : SET : MERGE 1298
 1298 ELSE LOAD INPUT 0
 1299 MEM 0,1 : READ SAMPLES$ CVS "YES" + {0xFE} LET "samples",1000 ELSE LLIST 7,0,0 : DELETE : FOR 
 1300 IF 
 1410 LLIST 0
 1420 SAVE A LOC Y
 1440 MEM 1,0 : LLIST 8,1
 1450 RANDOM Q%(500)
 1460 RANDOM D1%(150),D2%(150),C1%(200),C2%(200)
 1470 RANDOM DNK%(300)
 1480 GOTO 1940
 1490 GOTO 1780
 1500 DELETE 
 1510 RANDOM B%(300)
 1520 RESET I CVS 2 STEP 300 : B%(I) CVS LOC 16384 EOF 192 : SET 
 1530 B%(0) CVS 2 : B%(1) CVS 193
 1540 IF 
 1550 CX CVS 110 : DELETE 
 1590 DEF (0,0) LOC (305,199),,B
 1600 DEF (6,6) LOC (97,195),1,BF
 1610 DEF (183,6) LOC (305,195),1,BF
 1620 THEN 3,5 : GOSUB "Donkey"
 1630 THEN 3,29 : GOSUB "Driver"
 1631 THEN 19,25 : GOSUB "Press Space  ";
 1632 THEN 20,25 : GOSUB "Bar to switch";
 1633 THEN 21,25 : GOSUB "lanes        ";
 1635 THEN 23,25 : GOSUB "Press ESC    ";
 1636 THEN 24,25 : GOSUB "to exit      ";
 1640 RESET Y CVS 4 STEP 199 * 20 : DEF (140,Y) LOC (140,Y EOF 10) : SET 
 1650 CY CVS 105 : CX CVS 105
 1660 DEF (100,0) LOC (100,199) : DEF (180,0) LOC (180,199)
 1670 THEN 5,6 : GOSUB SD : THEN 5,31 : GOSUB SM
 1680 CY CVS CY LOC 4 : READ CY CVD 60 + 2230
 1690 {0xFE} DATA (CX,CY),CAR%, TIME$ 
 1700 DX CVS 105 EOF 42 LOF {0xFF} CMD ({0xFF} DATA LOF 2)
 1710 RESET Y CVS ({0xFF} DATA LOF LOC 4) LOF 8 STEP 124 * 6
 1720 STRING$ 20000,1
 1730 A$ CVS RND : READ A$ CVS {0xFF} TRON (27) + 1298 ELSE DEFSTR 106,0 : READ {0xFF} RETURN (A$) CVI 0 + DEF (CX,CY) LOC (CX EOF 28,CY EOF 44),0,BF : CX CVS 252 LOC CX : {0xFE} DATA (CX,CY),CAR%, TIME$ : STRING$ 200,1
 1740 READ Y CVS CVI 3 + {0xFE} DATA (DX,Y),DNK%, POINT 
 1750 READ CX CVS DX MKD$ Y EOF 25 CVI CVS CY + 2060
 1760 READ Y MKD$ 3 + {0xFE} DATA (140,6),B%
 1770 SET : DEF (DX,124) LOC (DX EOF 32,149),0,BF : INPUT 1670
 1780 DELETE 
 1790 {0xFE} RETURN "S8C3"
 1800 {0xFE} RETURN "BM12,1r3m+1,3d2R1ND2u1r2d4l2u1l1"
 1810 {0xFE} RETURN "d7R1nd2u2r3d6l3u2l1d3m-1,1l3"
 1820 {0xFE} RETURN "m-1,-1u3l1d2l3u6r3d2nd2r1u7l1d1l2"
 1830 {0xFE} RETURN "u4r2d1nd2R1U2"
 1840 {0xFE} RETURN "M+1,-3"
 1850 {0xFE} RETURN "BD10D2R3U2M-1,-1L1M-1,1"
 1860 {0xFE} RETURN "BD3D1R1U1L1BR2R1D1L1U1
 1870 {0xFE} RETURN "BD2BL2D1R1U1L1BR2R1D1L1U1
 1880 {0xFE} RETURN "BD2BL2D1R1U1L1BR2R1D1L1U1
 1890 DEF (0,0) LOC (40,60),,B
 1900 {0xFE} IF (1,1)
 1910 RANDOM CAR%(900)
 1920 {0xFE} INPUT (1,1) LOC (29,45),CAR%
 1930 RUN 
 1940 DELETE 
 1950 {0xFE} RETURN "S08"
 1960 {0xFE} RETURN "BM14,18"
 1970 {0xFE} RETURN "M+2,-4R8M+1,-1U1M+1,+1M+2,-1
 1980 {0xFE} RETURN "M-1,1M+1,3M-1,1M-1,-2M-1,2"
 1990 {0xFE} RETURN "D3L1U3M-1,1D2L1U2L3D2L1U2M-1,-1"
 2000 {0xFE} RETURN "D3L1U5M-2,3U1"
 2010 {0xFE} IF (21,14),3
 2020 TIME$ (37,10) : TIME$ (40,10)
 2030 TIME$ (37,11) : TIME$ (40,11)
 2040 {0xFE} INPUT (13,0) LOC (45,25),DNK%
 2050 RUN 
 2060 SD CVS SD EOF 1 : THEN 14,6 : GOSUB "BOOM!"
 2070 {0xFE} INPUT (DX,Y) LOC (DX EOF 16,Y EOF 25),D1%
 2080 D1X CVS DX : D1Y CVS Y : D2X CVS DX EOF 17
 2090 {0xFE} INPUT (DX EOF 17,Y) LOC (DX EOF 31,Y EOF 25),D2%
 2100 {0xFE} INPUT (CX,CY) LOC (CX EOF 14,CY EOF 44),C1%
 2110 {0xFE} INPUT (CX EOF 15,CY) LOC (CX EOF 28,CY EOF 44),C2%
 2120 C1X CVS CX : C1Y CVS CY : C2X CVS CX EOF 15
 2130 RESET P CVS 6 STEP 0 * LOC 1 : Z CVS 1 MKI$ (2 MKS$ P) : Z1 CVS 1 LOC Z
 2140 {0xFE} DATA (C1X,C1Y),C1% : {0xFE} DATA (C2X,C1Y),C2%
 2150 {0xFE} DATA (D1X,D1Y),D1% : {0xFE} DATA (D2X,D1Y),D2%
 2160 C1X CVS CX LOF Z1 : D1Y CVS Y LOF Z1 : C2X CVS C2X EOF (291 LOC C2X) LOF Z
 2170 D1X CVS DX LOF Z1 : C1Y CVS C1Y EOF (155 LOC C1Y) LOF Z : D2X CVS D2X EOF (294 LOC D2X) LOF Z
 2180 {0xFE} DATA (C1X,C1Y),C1% : {0xFE} DATA (C2X,C1Y),C2%
 2190 {0xFE} DATA (D1X,D1Y),D1% : {0xFE} DATA (D2X,D1Y),D2%
 2200 STRING$ 37 EOF {0xFF} DATA LOF 200,4 : SET 
 2210 RESET Y CVS 1 STEP 2000 : SET 
 2220 DELETE : INPUT 1540
 2230 SM CVS SM EOF 1 : THEN 7,25 : GOSUB "Donkey loses!"
 2240 RESET Y CVS 1 STEP 1000 : SET 
 2250 DELETE : INPUT 1540
