# NOTE: Type forced to be:
# trs2 - TRS-80 Level II BASIC tokenized file
   10 CLS : CLEAR 50 : GOSUB 63 : DEFINT A - Z : DIM A(40,62) : FOR X = 0 TO 40 : PRINT @60,40 - X; : FOR Y = 0 TO 62 : READ C : A(X,Y) = C : NEXT Y,X : X = 39 : Y = 61 : DX = - 1 : DY = 0 : GOSUB 67 : GOSUB 118 ELSE ERROR GOTO 11 : GOTO 12
   11 W2 = 5 : L2 = 0 : R2 = 0 : RESUME 15
   12 LE = VAL (A$)
   13 W1 = - A(X + DX,Y + DY) : CLS : L1 = - A(X + DY,Y + DX) : R1 = - A(X - DY,Y - DX) : IF W1 THEN 14 : ELSE R2 = - A(X + 2 * DX - DY,Y + 2 * DY - DX) : L2 = - A(X + 2 * DX + DY,Y + 2 * DY + DX) : W2 = - A(X + 3 * DX,Y + 3 * DY)
   14 IF DY THEN M1 = R1 : M2 = R2 : R1 = L1 : R2 = L2 : L1 = M1 : L2 = M2
   15 : REM ' **** START EVALUATION *****
   16 IF NOT L1 THEN A$ = "L" : ELSE A$ = " "
   17 IF NOT W1 THEN A$ = A$ + "S" : ELSE A$ = A$ + " "
   18 IF NOT R1 THEN A$ = A$ + "R" : ELSE A$ = A$ + " "
   19 IF W1 THEN 44
   20 IF L1 THEN GOSUB 47 : ELSE GOSUB 48
   21 IF L2 THEN GOSUB 49 : ELSE GOSUB 50
   22 IF W2 = 5 THEN 30
   23 IF NOT L2 AND NOT W2 AND R2 THEN GOSUB 51
   24 IF L2 AND NOT W2 AND R2 THEN GOSUB 52
   25 IF NOT L2 AND NOT W2 AND NOT R2 THEN GOSUB 54
   26 IF L2 AND NOT W2 AND NOT R2 THEN GOSUB 55
   27 IF NOT L2 AND W2 AND NOT R2 THEN GOSUB 53
   28 IF L2 AND W2 AND NOT R2 THEN GOSUB 61
   29 IF NOT L2 AND W2 AND R2 THEN GOSUB 62
   30 IF NOT R2 THEN GOSUB 56
   31 IF R2 THEN GOSUB 58
   32 IF NOT R1 THEN GOSUB 59
   33 IF R1 THEN GOSUB 60
   34 IF W2 = 5 THEN 70
   35 B$ = INKEY$ : IF B$ = ""THEN 35
   36 IF B$ = "L" AND MID$ (A$,1,1) = "L" AND DX THEN DY = DX : DX = 0 : GOTO 43
   37 IF B$ = "L" AND MID$ (A$,1,1) = "L" AND DY THEN DX = - DY : DY = 0 : GOTO 43
   38 IF B$ = "S" AND MID$ (A$,2,1) = "S" THEN 43
   39 IF B$ = "R" AND MID$ (A$,3,1) = "R" AND DX THEN DY = - DX : DX = 0 : GOTO 43
   40 IF B$ = "R" AND MID$ (A$,3,1) = "R" AND DY THEN DX = DY : DY = 0 : GOTO 43
   41 IF B$ = "H" THEN GOSUB 118 : CLS : GOTO 15
   42 PRINT @512,"INVALID RESPONSE"; : FOR A = 1 TO 2000 : NEXT : PRINT @512,"                "; : GOTO 35
   43 X = X + 2 * DX : Y = Y + 2 * DY : GOTO 13
   44 IF R1 AND NOT L1 THEN A$ = "L  ": FOR A = 0 TO 83 : SET (A,5) : SET (A,42) : NEXT : FOR A = 6 TO 41 : SET (83,A) : NEXT : B = 4 : C = 43 : FOR A = 84 TO 88 : SET (A,B) : SET (A,C) : B = B - 1 : C = C + 1 : NEXT : GOTO 35
   45 IF NOT R1 AND L1 THEN A$ = "  R" : B = 0 : C = 47 : FOR A = 41 TO 45 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : NEXT : FOR A = 5 TO 42 : SET (46,A) : NEXT : FOR A = 47 TO 127 : SET (A,5) : SET (A,42) : NEXT : GOTO 35
   46 IF NOT R1 OR NOT L1 THEN A$ = "L R" : FOR A = 0 TO 127 : SET (A,5) : SET (A,42) : NEXT : GOTO 35
   47 B = 0 : C = 47 : FOR A = 41 TO 54 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : NEXT : RETURN 
   48 FOR A = 0 TO 46 : SET (A,5) : SET (A,42) : NEXT : FOR A = 5 TO 42 : SET (46,A) : NEXT : B = 6 : C = 41 : FOR A = 47 TO 54 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : NEXT A : RETURN 
   49 B = 14 : C = 33 : FOR A = 55 TO 59 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : NEXT : RETURN 
   50 FOR A = 14 TO 33 : SET (55,A) : NEXT : IF W2 = 5 THEN RETURN : ELSE FOR A = 56 TO 59 : SET (A,19) : SET (A,28) : NEXT : RETURN 
   51 FOR A = 19 TO 28 : SET (60,A) : NEXT : B = 20 : C = 27 : FOR A = 61 TO 69 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : NEXT : RETURN 
   52 B = 19 : C = 28 : FOR A = 60 TO 69 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : NEXT : RETURN 
   53 FOR A = 60 TO 69 : SET (A,19) : SET (A,28) : NEXT : RETURN 
   54 FOR A = 19 TO 28 : SET (60,A) : SET (69,A) : NEXT : B = 20 : C = 27 : FOR A = 61 TO 68 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : NEXT : RETURN 
   55 B = 19 : C = 28 : FOR A = 60 TO 68 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : NEXT : FOR A = 19 TO 28 : SET (69,A) : NEXT : RETURN 
   56 IF W2 = 5 THEN 57 : ELSE FOR A = 70 TO 73 : SET (A,19) : SET (A,28) : NEXT : FOR A = 14 TO 33 : SET (74,A) : NEXT : RETURN 
   57 FOR A = 14 TO 33 : SET (74,A) : NEXT : RETURN 
   58 B = 18 : C = 29 : FOR A = 70 TO 74 : SET (A,B) : SET (A,C) : B = B - 1 : C = C + 1 : NEXT : RETURN 
   59 B = 13 : C = 34 : FOR A = 75 TO 82 : SET (A,B) : SET (A,C) : B = B - 1 : C = C + 1 : NEXT : FOR A = 5 TO 42 : SET (83,A) : NEXT : FOR A = 84 TO 127 : SET (A,5) : SET (A,42) : NEXT : RETURN 
   60 B = 13 : C = 34 : FOR A = 75 TO 88 : SET (A,B) : SET (A,C) : B = B - 1 : C = C + 1 : NEXT : RETURN 
   61 FOR A = 19 TO 28 : SET (60,A) : NEXT : FOR A = 61 TO 69 : SET (A,19) : SET (A,28) : NEXT : RETURN 
   62 FOR A = 60 TO 68 : SET (A,19) : SET (A,28) : NEXT : FOR A = 19 TO 28 : SET (69,A) : NEXT : RETURN 
   63 FOR A = 24 TO 28 : SET (A,5) : NEXT : FOR A = 5 TO 42 : SET (26,A) : NEXT : FOR A = 5 TO 42 : SET (30,A) : SET (34,A) : NEXT : FOR A = 30 TO 34 : SET (A,42) : NEXT : FOR A = 5 TO 42 : SET (36,A) : SET (40,A) : NEXT : FOR A = 37 TO 39 : SET (A,A - 14) : NEXT : FOR A = 7 TO 40 : SET (42,A) : NEXT : FOR A = 43 TO 45 : SET (A,A - 20) : NEXT : FOR A = 11 TO 36
   64 SET (46,A) : NEXT : FOR A = 13 TO 34 : SET (48,A) : NEXT : B = 14 : C = 33 : FOR A = 49 TO 52 : SET (A,B) : SET (A,C) : B = B + 1 : C = C - 1 : SET (A,24) : NEXT : FOR A = 19 TO 28 : SET (54,A) : NEXT : B = 27 : FOR A = 55 TO 58 : SET (A,B) : B = B - 1 : NEXT : B = 24 : FOR A = 71 TO 74 : SET (A,B) : B = B + 1 : NEXT : FOR A = 19 TO 28 : SET (75,A) : NEXT 
   65 B = 17 : C = 30 : FOR A = 77 TO 81 : SET (A,B) : SET (A,C) : B = B - 1 : C = C + 1 : NEXT : FOR A = 15 TO 32 : SET (79,A) : NEXT : B = 11 : C = 36 : FOR A = 83 TO 87 : SET (A,B) : SET (A,C) : SET (A,24) : B = B - 1 : C = C + 1 : NEXT : FOR A = 11 TO 24 : SET (83,A) : NEXT : FOR A = 24 TO 40 : SET (87,A) : NEXT : FOR A = 89 TO 93 : SET (A,5) : SET (A,42) : NEXT 
   66 FOR A = 5 TO 42 : SET (91,A) : NEXT : FOR A = 5 TO 42 : SET (95,A) : SET (99,A) : NEXT : FOR A = 96 TO 98 : SET (A,5) : SET (A,42) : NEXT : FOR A = 5 TO 42 : SET (101,A) : SET (105,A) : NEXT : FOR A = 102 TO 104 : SET (A,A - 79) : NEXT : RETURN 
   67 CLS : PRINT "PROFICIENCY LEVEL<ERROR>    1) NOVICE <-H- COMMAND PRINTS OUT MAZE AND POSITION><ERROR>    2) INTERMIDIATE <-H- COMMAND PRINTS MAZE ONLY><ERROR>    3) EXPERT <-H- COMMAnD ILLEGAL><ERROR>           ----->     <-----<ERROR>                 LEVEL" : PRINT @275,"";
   68 A$ = INKEY$ : IF A$ = ""THEN 68 : ELSE LE = VAL (A$) : IF LE < 1 OR LE > 3 THEN 68 : ELSE PRINT A$; : PRINT @384,"COMMANDS :  -S- = MOVES YOU STRAIGHT<ERROR>--------- -R- = MOVES YOU RIGHT<ERROR>          -L- = MOVES YOU LEFT<ERROR>          -H- = PRINTS MAZE AND POSITION, ALTERABLE BY";
   69 PRINT "                          PROFICIENCY LEVEL<ERROR><ERROR>A PICTURE OF THE MAZE WILL FOLLOW. ARE YOU READY "; : INPUT B$ : LE = 1 : RETURN 
   70 PRINT @541,"E X I T";
   71 FOR I = 1 TO 2000 : NEXT I
   72 CLS : PRINT CHR$ (23) : PRINT @512,"CONGRATULATIONS" : PRINT : PRINT "YOU MADE IT OUT!"
   73 PRINT : PRINT "ANOTHER GAME" : INPUT A$
   74 IF LEFT$ (A$,1) = "Y" THEN RUN 10
   75 CLS : PRINT : PRINT "I HOPE YOU HAD FUN." : PRINT : PRINT "TO PLAY AGAIN, TYPE 'RUN'."
   76 PRINT : PRINT "TO LOAD ANOTHER PROGRAM, TYPE 'CLOAD'." : PRINT : END 
   77 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
   78 DATA 1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
   79 DATA 1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1
   80 DATA 1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1
   81 DATA 1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1
   82 DATA 1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1
   83 DATA 1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1
   84 DATA 1,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1
   85 DATA 1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1
   86 DATA 1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1
   87 DATA 1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1
   88 DATA 1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1
   89 DATA 1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1
   90 DATA 1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1
   91 DATA 1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1
   92 DATA 1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
   93 DATA 1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1
   94 DATA 1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1
   95 DATA 1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1
   96 DATA 1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1
   97 DATA 1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1
   98 DATA 1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1
   99 DATA 1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1
  100 DATA 1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1
  101 DATA 1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1
  102 DATA 1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1
  103 DATA 1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1
  104 DATA 1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1
  105 DATA 1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1
  106 DATA 1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1
  107 DATA 1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1
  108 DATA 1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1
  109 DATA 1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1
  110 DATA 1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1
  111 DATA 1,0,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1
  112 DATA 1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,11,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,1
  113 DATA 1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1
  114 DATA 1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1
  115 DATA 1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1
  116 DATA 1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
  117 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
  118 IF LE = 3 THEN PRINT @512,"SORRY"; : FOR A = 1 TO 1000 : NEXT : RETURN : ELSE CLS : FOR A = 0 TO 40 : FOR B = 0 TO 62 : IF A(A,B) THEN SET (2 * B,A) : SET (2 * B + 1,A) : NEXT B,A : ELSE NEXT B,A
  119 IF LE = 2 THEN IF INKEY$ = ""THEN 119 : ELSE RETURN : ELSE SET (2 * Y,X) : SET (2 * Y + 1,X) : FOR B = 1 TO 100 : NEXT B : RESET (2 * Y,X) : RESET (2 * Y + 1,X) : FOR B = 1 TO 100 : NEXT B
  120 IF INKEY$ = ""THEN 119 : ELSE RETURN 
  121 GOTO 119
